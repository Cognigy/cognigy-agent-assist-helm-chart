{{- if .Values.mongodb.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cognigy-agent-assist-db-init
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    # This is what defines this resource as a hook. Without these lines, the
    # resource is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: cognigy-agent-assist-db-init
    spec:
      restartPolicy: Never
      {{- include "image.pullSecrets" $ | nindent 6 }}
      {{- if .Values.mongodb.dbinit.securityContext }}
      securityContext:
        {{- toYaml .Values.mongodb.dbinit.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - name: cognigy-agent-assist-db-init
        image: {{ .Values.mongodb.dbinit.image }}
        command: ["/bin/bash"]
        {{- if eq .Values.mongodb.scheme "mongodb+srv" }}
        args: ["/cognigy-ai-dbinit/dbinit-generate/dbinit-generate-atlas.sh"]
        {{- else }}
        args: ["/cognigy-ai-dbinit/dbinit-generate/dbinit-generate.sh"]
        {{- end }}
        volumeMounts:
        - name: dbinit-generate
          mountPath: /cognigy-ai-dbinit/dbinit-generate
        - name: mongodb-connection-strings
          mountPath: "/cognigy-ai-dbinit/mongodb-connection-strings"
          readOnly: true
        env:
          {{- if eq .Values.mongodb.scheme "mongodb+srv" }}
          - name: MONGODB_ATLAS_PUBLIC_API_KEY
            valueFrom:
              secretKeyRef:
                name: {{- include "mongodbAtlasCredentials.secretName.render" $ | indent 1 }}
                key: apikeypublic
          - name: MONGODB_ATLAS_PRIVATE_API_KEY
            valueFrom:
              secretKeyRef:
                name: {{- include "mongodbAtlasCredentials.secretName.render" $ | indent 1 }}
                key: apikeyprivate
          - name: MONGODB_ATLAS_PROJECT_ID
            valueFrom:
              secretKeyRef:
                name: {{- include "mongodbAtlasCredentials.secretName.render" $ | indent 1 }}
                key: projectid
          - name: MONGODB_ATLAS_CLUSTER_NAME
            valueFrom:
              secretKeyRef:
                name: {{- include "mongodbAtlasCredentials.secretName.render" $ | indent 1 }}
                key: clustername
          {{- else }}
          - name: MONGODB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{- include "mongodbCredentials.secretName.render" $ | indent 1 }}
                key: username
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{- include "mongodbCredentials.secretName.render" $ | indent 1 }}
                key: password
          - name: MONGODB_HOSTS
            valueFrom:
              secretKeyRef:
                name: mongodb-connection-hosts
                key: hosts
          {{- end}} 
      volumes:
      - name: dbinit-generate
        configMap:
          name: dbinit-generate

      - name: mongodb-connection-strings
        projected:
          sources:
          - secret:
              name: cognigy-agent-assist
              items:
              - key: connection-string
                path: cognigy-agent-assist
{{- end }}
{{- if and (.Values.mongodb.enabled) (eq .Values.mongodb.scheme "mongodb") (not .Values.mongodb.auth.existingSecret) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-connection-creds
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    # This is what defines this resource as a hook. Without these lines, the
    # resource is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
type: Opaque
data:
  username: "{{- .Values.mongodb.auth.rootUser | b64enc }}"
  password: "{{- .Values.mongodb.auth.rootPassword | b64enc }}"
{{- end }}
{{- if and (.Values.mongodb.enabled) (eq .Values.mongodb.scheme "mongodb+srv") (not .Values.mongodb.auth.atlas.existingSecret) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-atlas-creds
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    # This is what defines this resource as a hook. Without these lines, the
    # resource is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
type: Opaque
data:
  apikeypublic: "{{- .Values.mongodb.auth.atlas.publicAPIKey | b64enc }}"
  apikeyprivate: "{{- .Values.mongodb.auth.atlas.privateAPIKey | b64enc }}"
  projectid: "{{- .Values.mongodb.auth.atlas.projectId | b64enc }}"
  clustername: "{{- .Values.mongodb.auth.atlas.clusterName | b64enc }}"
{{- end }}
{{- if .Values.mongodb.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-connection-hosts
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    # This is what defines this resource as a hook. Without these lines, the
    # resource is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
type: Opaque
data:
  hosts: "{{- .Values.mongodb.hosts | b64enc }}"
{{- end }}
{{- if .Values.mongodb.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dbinit-generate
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    # This is what defines this resource as a hook. Without these lines, the
    # resource is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
data:
{{- if eq .Values.mongodb.scheme "mongodb+srv" }}
{{ (.Files.Glob "scripts/dbinit-generate-atlas.sh").AsConfig | indent 2 }}
{{- else }}
{{ (.Files.Glob "scripts/dbinit-generate.sh").AsConfig | indent 2 }}
{{- end }}
{{- end }}